package template

import (
	"fmt"
	"github.com/romshark/todostar/domain"
	"github.com/romshark/todostar/pkg/timefmt"
	"time"
)

templ PartTodos(todos []*domain.Todo) {
	<div id="todos">
		<p class="mb-2 text-sm">
			{ fmt.Sprintf(
				"Found %d todo(s) - %.0f%% done",
				len(todos), percentDone(todos),
			) }
		</p>
		if len(todos) < 1 {
			<p class=" w-full text-center p-4">
				No todos found.
			</p>
		} else {
			@PartTodosList(todos)
		}
	</div>
}

templ PartTodosList(todos []*domain.Todo) {
	<ul id="todos-list" class="list-none flex flex-col gap-2">
		for i, todo := range todos {
			@PartTodosListItem(i, todo)
		}
	</ul>
}

templ PartTodosListItem(i int, todo *domain.Todo) {
	<li
		style={ fmt.Sprintf("--i: %d", i+1) }
		class="
			animatedAppear
			opacity-100 border rounded shadow-sm m-0
			border-stone-300 dark:border-stone-700
		"
		data-signals={ fmt.Sprintf(`{_todo_%d: {
			checked: %t,
			title: %q,
			description: %q,
			due: %q,
		}}`,
			todo.ID,
			todo.Status == domain.StatusDone,
			todo.Title,
			todo.Description,
			timefmt.DateTimeStr(todo.Due),
		) }
	>
		<div class="flex flex-row gap-1 p-2">
			// <wa-checkbox> does not reflect its checked property and only affects
			// the initial render. As a result, Datastar morphing will not sync
			// using the attribute. Set the el.checked property explicitly via
			// data-effect which is executed on every morph.
			<wa-checkbox
				class="pt-1.5"
				data-on-input={ fmt.Sprintf(
					`$selectedTodoID = %d; $editChecked = el.checked; @post('/todo/', {
						filterSignals: {include: /^(selectedTodoID|editChecked)$/},
					})`, todo.ID,
				) }
				if todo.Status == domain.StatusDone {
					checked
				}
				data-effect={ fmt.Sprintf(
					"el.checked = %t", todo.Status == domain.StatusDone,
				) }
			></wa-checkbox>
			<div class="flex flex-col grow">
				<div class="flex flex-row gap-2 justify-between items-start">
					<p class="font-semibold h-8 leading-8 m-0 p-0 min-h-fit">
						<span
							if todo.Status == domain.StatusDone {
								class="line-through"
							}
						>
							{ todo.Title }
						</span>
					</p>
					<div class="flex flex-row justify-between">
						<div
							data-on-click={ fmt.Sprintf(
								`$selectedTodoID = %d;
								$editChecked = $_todo_%d.checked;
								$editTitle = $_todo_%d.title;
								$editDescription = $_todo_%d.description;
								$editDue = $_todo_%d.due;
								el_dialogEdit.open = true;`,
								todo.ID, todo.ID, todo.ID, todo.ID, todo.ID,
							) }
						>
							<wa-button appearance="plain">
								<wa-icon name="pen" label="Edit Todo"></wa-icon>
							</wa-button>
						</div>
						<div
							data-on-click={ fmt.Sprintf(
								`$selectedTodoID = %d; $editArchived = true;
								@post('/todo/', {filterSignals: {
									include: /^(selectedTodoID|editArchived)$/
								}})
								`, todo.ID,
							) }
						>
							<wa-button appearance="plain">
								<wa-icon name="archive" label="Archive Todo"></wa-icon>
							</wa-button>
						</div>
					</div>
				</div>
				if todo.Status != domain.StatusDone {
					<p class="whitespace-pre-wrap p-0 m-0 pr-4">{ todo.Description }</p>
					if !todo.Due.IsZero() {
						<div class="flex flex-row gap-2 pb-2 pt-2">
							@tooltip(todo.Due.Format(
								"Monday, Jan _2 2006 - 15:04:05",
							)) {
								<wa-tag
									if dueDateOver(time.Now(), todo.Due) {
										variant="warning"
									} else {
										variant="neutral"
									}
								>
									if dueDateOver(time.Now(), todo.Due) {
										<wa-icon name="clock"></wa-icon>
									}
									{ timefmt.Due(time.Now(), todo.Due) }
								</wa-tag>
							}
							@tooltip(todo.Created.Format(
								"Monday, Jan _2 2006 - 15:04:05",
							)) {
								<wa-tag variant="neutral">
									Created { timefmt.Dur(
										-todo.Created.Sub(time.Now()),
									) } ago
								</wa-tag>
							}
						</div>
					}
				}
			</div>
		</div>
	</li>
}
