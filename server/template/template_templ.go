// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package template

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func htmlMain(title string, startDark bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if startDark {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " style=\"opacity: 1 !important; background: #000;\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " class=\"wa-cloak\"><head><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `server/template/template.templ`, Line: 15, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if startDark {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<meta name=\"color-scheme\" content=\"dark light\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<meta name=\"color-scheme\" content=\"light dark\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"#000000\"><meta name=\"theme-color\" media=\"(prefers-color-scheme: light)\" content=\"#ffffff\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><meta charset=\"UTF-8\"><meta name=\"description\" content=\"Todostar - a Datastar tech demo.\"><meta name=\"author\" content=\"Roman Scharkov <roman.scharkov@gmail.com>\"><link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/static/favicon-32x32.png\"><link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/static/favicon-16x16.png\"><link rel=\"icon\" href=\"/static/favicon.ico\" sizes=\"any\"><link rel=\"apple-touch-icon\" href=\"/static/apple-touch-icon.png\"><link rel=\"manifest\" href=\"/static/site.webmanifest\"><meta name=\"theme-color\" content=\"#ffffff\"><script type=\"module\" src=\"https://cdn.jsdelivr.net/gh/starfederation/datastar@main/bundles/datastar.js\"></script><link rel=\"stylesheet\" href=\"https://early.webawesome.com/webawesome@3.0.0-beta.4/dist/styles/webawesome.css\"><script type=\"module\" src=\"https://early.webawesome.com/webawesome@3.0.0-beta.4/dist/webawesome.loader.js\"></script><link rel=\"stylesheet\" href=\"/static/dist.css\"><script>\n\t\t\t\tmatchMedia('(prefers-color-scheme: dark)').addEventListener(\n\t\t\t\t\t'change', e => {\n\t\t\t\t\t\tdocument.body.dispatchEvent(new CustomEvent(\n\t\t\t\t\t\t\t'system-theme-change', { detail: e.matches }\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t</script></head><body")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if startDark {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, " style=\"opacity: 1 !important; background: #000;\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, " data-signals=\"{\n\t\t\t\t_theme: (document.cookie.match(/(?:^| )theme=([^;]+)/)?.[1]) || 'system',\n\t\t\t\t_themeisdark: false,\n\t\t\t}\" data-effect=\"\n\t\t\t\t$_themeisdark = $_theme === 'dark' || (\n\t\t\t\t\t$_theme === 'system' &&\n\t\t\t\t\t\tmatchMedia('(prefers-color-scheme: dark)').matches\n\t\t\t\t);\n\t\t\t\tdocument.cookie = 'theme=' + $_theme +\n\t\t\t\t\t';path=/;max-age=31536000';\n\t\t\t\tdocument.cookie = 'themeisdark=' + ($_themeisdark ? '1' : '0') +\n\t\t\t\t\t';path=/;max-age=31536000';\n\t\t\t\tdocument.documentElement.classList.toggle('dark', $_themeisdark);\n\t\t\t\" data-on-load=\"el.style=''\" data-on-system-theme-change=\"$_themeisdark = evt.detail\" data-class-wa-dark=\"$_themeisdark\" class=\"\n\t\t\t\th-fit min-h-screen flex flex-col items-center justify-between\n\t\t\t\tbg-white text-black\n\t\t\t\tdark:bg-stone-950 dark:text-stone-400\n\t\t\t\"><div><nav class=\"flex flex-row p-2 w-full justify-between items-center max-w-xl md:max-w-xl\"><div data-on-click=\"window.location = '/'\" class=\"hover:scale-110 transition cursor-pointer\"><img class=\"h-6\" src=\"/static/logo.svg\" alt=\"logo\" data-show=\"!$_themeisdark\"> <img class=\"h-6 opacity-60\" src=\"/static/logo_dark.svg\" alt=\"logo\" data-show=\"$_themeisdark\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = profileNavMenu().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</nav><main class=\"container p-4 max-w-screen h-fit w-xl\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</main></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func validationError() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div class=\"text-red-500 flex flex-row gap-0.5 items-center\"><wa-icon name=\"circle-exclamation\"></wa-icon>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var3.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func profileNavMenu() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<wa-dropdown placement=\"bottom-end\"><wa-button appearance=\"plain\" slot=\"trigger\"><wa-icon name=\"user\" label=\"Main Menu\"></wa-icon></wa-button> <wa-dropdown-item data-on-click=\"window.location = '/archive/'\"><wa-icon slot=\"icon\" name=\"archive\" label=\"Archive\"></wa-icon> Archive</wa-dropdown-item><h3>Theme</h3><wa-dropdown-item data-on-click=\"$_theme = 'light'\"><wa-icon slot=\"icon\" name=\"sun\" label=\"Light Theme\"></wa-icon> Light</wa-dropdown-item> <wa-dropdown-item data-on-click=\"$_theme = 'dark'\"><wa-icon slot=\"icon\" name=\"moon\" label=\"Dark Theme\"></wa-icon> Dark</wa-dropdown-item> <wa-dropdown-item data-on-click=\"$_theme = 'system'\"><wa-icon slot=\"icon\" name=\"desktop\" label=\"System Theme\"></wa-icon> System</wa-dropdown-item></wa-dropdown>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func tooltip(text string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<div class=\"group relative inline-flex w-fit\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var5.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<div fade-out. class=\"opacity-0 invisible scale-90 transition-all duration-100 delay-200\n\t\t\tgroup-hover:opacity-100 group-hover:visible group-hover:scale-100 group-hover:delay-300\n\t\t\tabsolute z-10 top-full mt-2 left-1/2 -translate-x-1/2\n\t\t\tbg-gray-800 text-white text-xs font-medium py-1.5 px-3 rounded-md whitespace-nowrap\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(text)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `server/template/template.templ`, Line: 157, Col: 9}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func footer() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var7 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var7 == nil {
			templ_7745c5c3_Var7 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "<footer class=\"\n\t\t\t opacity-60 font-sans p-8\n\t\t\tmax-w-xl md:max-w-xl flex flex-col items-center\"><span><a target=\"_blank\" href=\"https://github.com/romshark/todostar\"><wa-icon class=\"text-sm\" family=\"brands\" name=\"github\"></wa-icon> Todostar</a> - a <a target=\"_blank\" href=\"https://data-star.dev\">Datastar</a> tech demo</span> <span>Hand-crafted with 🫶 by <a target=\"_blank\" href=\"https://github.com/romshark\"><wa-icon class=\"text-sm\" family=\"brands\" name=\"github\"></wa-icon> Roman Sharkov</a></span></footer>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
